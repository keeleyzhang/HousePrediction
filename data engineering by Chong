#transform dummy back to numeric
df.numeric$poolQc <- (df.numeric$PoolQC_Ex)*3+(df.numeric$PoolQC_Gd)*2+(df.numeric$PoolQC_Fa)*1+(df.numeric$PoolQC_None)*0
table(df.numeric$poolQc)
df.numeric$PoolQC_None <- NULL
df.numeric$PoolQC_Ex <- NULL
df.numeric$PoolQC_Gd <- NULL
df.numeric$PoolQC_Fa <- NULL

df.numeric$BsmtCond <- (df.numeric$BsmtCond_Gd)*4+(df.numeric$BsmtCond_TA)*3+(df.numeric$BsmtCond_Fa)*2+(df.numeric$BsmtCond_Po)*1+(df.numeric$BsmtCond_None)*0
df.numeric$BsmtCond_Gd <- NULL
df.numeric$BsmtCond_TA <- NULL
df.numeric$BsmtCond_Fa <- NULL
df.numeric$BsmtCond_Po <- NULL
df.numeric$BsmtCond_None <- NULL

#combine all bathroom 
df.numeric$TotBathrooms <- df.numeric$FullBath + (df.numeric$HalfBath)*0.5 + df.numeric$BsmtFullBath + (df.numeric$BsmtHalfBath)*0.5
df.numeric$FullBath <- NULL
df.numeric$HalfBath <- NULL
df.numeric$BsmtFullBath <- NULL
df.numeric$BsmtHalfBath <- NULL

#make houseage variable
df.numeric$houseage <- (df.numeric$YrSold) - (df.numeric$YearRemodAdd)
df.numeric$houseage[which(df.numeric$houseage<0)]=0
df.numeric$YrSold<-NULL
df.numeric$YearRemodAdd<-NULL
df.numeric$YearBuilt<-NULL

#garageage
df.numeric$garageage <- 2011 - df.numeric$GarageYrBlt
df.numeric$GarageYrBlt <- NULL

#total square feet 
df.numeric$totalsqft <- df.numeric$GrLivArea+df.numeric$TotalBsmtSF
df.numeric$GrLivArea <- NULL
df.numeric$TotalBsmtSF <- NULL

#porch variables combined
df.numeric$totalporchsf <- df.numeric$OpenPorchSF+df.numeric$EnclosedPorch+df.numeric$X3SsnPorch+df.numeric$ScreenPorch
df.numeric$OpenPorchSF<-NULL
df.numeric$X3SsnPorch <-NULL
df.numeric$ScreenPorch<-NULL
df.numeric$EnclosedPorch<-NULL

df.numeric$MSSubClass<-NULL

paste('There are', sum(sapply(df.numeric, is.character)), 'character columns left')

#centralair combined
df.numeric$CentralAir_N<-NULL

# No more character values left
#see distribution of saleprice
ggplot(data=as.data.frame(training_data$SalePrice), aes(x=training_data$SalePrice)) +
  geom_histogram(fill="skyblue", binwidth = 10000) +
  scale_x_continuous(breaks= seq(0, 800000, by=100000), labels = comma)

summary(training_data$SalePrice)
df.numeric$gara
#remove highly correlated variables, correation of the "garage columns
heatmap(cor(df.numeric[,grep('^Garage',names(df.numeric))]))
#shows high correalation: car&area, qual&cond, drop area&cond
df.numeric$GarageArea<-NULL
df.numeric$GarageCond<-NULL

#then fireplace 
cor(df.numeric[,grep('^Fireplace',names(df.numeric))]) #fireplaces and quality are highly correlated,drop fireplaces
df.numeric$Fireplaces<-NULL

#then basement, heating, overall,exterior,saletype,roof, lot
cor(df.numeric[,grep('^Bsmt',names(df.numeric))]) #found none
cor(df.numeric[,grep('^Heat',names(df.numeric))]) #found none
cor(df.numeric[,grep('^Overall',names(df.numeric))]) # 90% correlation, drop cond
df.numeric$OverallCond <-NULL
cor(df.numeric[,grep('^Bsmt',names(df.numeric))]) #found none
View(cor(df.numeric[,grep('^Sale',names(df.numeric))])) #found none
View(cor(df.numeric[,grep('^Roof',names(df.numeric))])) #found none
cor(df.numeric[,grep('^Lot',names(df.numeric))]) #found none

#importance visualization quick random forest
set.seed(1)
quick_RF <- randomForest(x=df.numeric[1:1460,], y=train$salePrice, ntree=100,importance=TRUE)
imp_RF <- importance(quick_RF)
imp_DF <- data.frame(Variables = row.names(imp_RF), MSE = imp_RF[,1])
imp_DF <- imp_DF[order(imp_DF$MSE, decreasing = TRUE),]

ggplot(imp_DF[1:20,], aes(x=reorder(Variables, MSE), y=MSE, fill=MSE)) + geom_bar(stat = 'identity') + labs(x = 'Variables', y= 'feature importance / % increase MSE if variable is randomly permuted') + coord_flip() + theme(legend.position="none")

#
s1 <- ggplot(data= df.numeric, aes(x=totalsqft)) + geom_density() + labs(x='total square feet living area')
s2<- ggplot(data=df.numeric, aes(x=as.factor(OverallQual))) + geom_histogram(stat='count') + labs(x='overall quality')
s3 <- ggplot(data=df.numeric, aes(x=as.factor(TotBathrooms))) + geom_histogram(stat='count') + labs(x='total bathrooms')
s4 <- ggplot(data= df.numeric, aes(x=houseage)) + geom_density() + labs(x='house age')
s5 <- ggplot(data=df.numeric, aes(x=as.factor(GarageCars))) + geom_histogram(stat='count') + labs(x='garage size')
s6 <- ggplot(data= df.numeric, aes(x=LotArea)) + geom_density() + labs(x='total lot area')
s7 <- ggplot(data=df.numeric, aes(x=as.factor(FireplaceQu))) + geom_histogram(stat='count') + labs(x='fireplace quality')
s8 <- ggplot(data=df.numeric, aes(x=as.factor(KitchenQual))) + geom_histogram(stat='count') + labs(x='kitchen quality')

install.packages("cowplot")
library(cowplot)
plot_grid(s1, s2, s3, s4, s5, s6, s7, s8, ncol=2,align = "V")


#separate training and testing data set
head(df.numeric)
dim(df.numeric)

dim(training_data)
dim(test_data)
train<- df.numeric[1:1460,,drop=F]
train$salePrice <- training_data$SalePrice
dim(train)
test<- df.numeric[1461:2919,,drop=F]
dim(test)
